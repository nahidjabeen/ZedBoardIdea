
nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff

$ git init
Initialized empty Git repository in C:/PROJECTS-NJK/GitStuff/.git/

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git config --help

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git config --global user.name "nahidjabeen"

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git config --global user.email "<nahidjabeenkabita@gmail.com>"

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git init
Reinitialized existing Git repository in C:/PROJECTS-NJK/GitStuff/.git/

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Follow-AMD.txt

nothing added to commit but untracked files present (use "git add" to track)

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git add Follow-AMD.txt

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Follow-AMD.txt


nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git remote add orgin https://github.com/nahidjabeen/ZedBoardIdea.git

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git commit -m "URLs and steps for Petalinux. Following AMD."
[master (root-commit) d1cdd32] URLs and steps for Petalinux. Following AMD.
 1 file changed, 1151 insertions(+)
 create mode 100644 Follow-AMD.txt

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git status
On branch master
nothing to commit, working tree clean

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git push -u origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream orgin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$ git push --set-upstream orgin master
info: please complete authentication in your browser...
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 22 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 14.20 KiB | 14.20 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/nahidjabeen/ZedBoardIdea.git
 * [new branch]      master -> master
branch 'master' set up to track 'orgin/master'.

nahid@Nice2behere MINGW64 /c/PROJECTS-NJK/GitStuff (master)
$
